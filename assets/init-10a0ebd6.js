import{E as _,U as qt,T as Xe,a as Nt,K as R,L as H,k as U,I as G,M as k,O as Zt,Q as Jt,w as D,V as E,W as se,X as O,R as ie,Y as Qt,Z as B,_ as ne,N as Ke,d as je,P as er,q as qe,c as ae,B as L,$ as tr,s as T,a0 as rr,a1 as Ne,g as sr,a2 as ir,a3 as oe,D as Ze,n as Je,e as C,a4 as nr,__tla as ar}from"./index-77dcad62.js";import{U as $,T as A,R as he,S as Qe,i as le,b as et,c as tt,j as rt,e as or,r as st,o as hr,n as it,a as lr,g as dr,k as ur,m as cr,B as nt,__tla as pr}from"./colorToUniform-c40b84c1.js";import{C as W,__tla as fr}from"./CanvasPool-d59cf3f4.js";import{g as gr,__tla as mr}from"./getBatchSamplersUniformGroup-5f5d2766.js";let xr=Promise.all([(()=>{try{return ar}catch{}})(),(()=>{try{return pr}catch{}})(),(()=>{try{return fr}catch{}})(),(()=>{try{return mr}catch{}})()]).then(async()=>{class de{static init(e){Object.defineProperty(this,"resizeTo",{set(t){globalThis.removeEventListener("resize",this.queueResize),this._resizeTo=t,t&&(globalThis.addEventListener("resize",this.queueResize),this.resize())},get(){return this._resizeTo}}),this.queueResize=()=>{this._resizeTo&&(this._cancelResize(),this._resizeId=requestAnimationFrame(()=>this.resize()))},this._cancelResize=()=>{this._resizeId&&(cancelAnimationFrame(this._resizeId),this._resizeId=null)},this.resize=()=>{if(!this._resizeTo)return;this._cancelResize();let t,r;if(this._resizeTo===globalThis.window)t=globalThis.innerWidth,r=globalThis.innerHeight;else{const{clientWidth:s,clientHeight:i}=this._resizeTo;t=s,r=i}this.renderer.resize(t,r),this.render()},this._resizeId=null,this._resizeTo=null,this.resizeTo=e.resizeTo||null}static destroy(){globalThis.removeEventListener("resize",this.queueResize),this._cancelResize(),this._cancelResize=null,this.queueResize=null,this.resizeTo=null,this.resize=null}}de.extension=_.Application;class ue{static init(e){e=Object.assign({autoStart:!0,sharedTicker:!1},e),Object.defineProperty(this,"ticker",{set(t){this._ticker&&this._ticker.remove(this.render,this),this._ticker=t,t&&t.add(this.render,this,qt.LOW)},get(){return this._ticker}}),this.stop=()=>{this._ticker.stop()},this.start=()=>{this._ticker.start()},this._ticker=null,this.ticker=e.sharedTicker?Xe.shared:new Xe,e.autoStart&&this.start()}static destroy(){if(this._ticker){const e=this._ticker;this.ticker=null,e.destroy()}}}ue.extension=_.Application;class dt extends Nt{constructor(){super(...arguments),this.chars=Object.create(null),this.lineHeight=0,this.fontFamily="",this.fontMetrics={fontSize:0,ascent:0,descent:0},this.baseLineOffset=0,this.distanceField={type:"none",range:0},this.pages=[],this.applyFillAsTint=!0,this.baseMeasurementFontSize=100,this.baseRenderedFontSize=100}get font(){return R(H,"BitmapFont.font is deprecated, please use BitmapFont.fontFamily instead."),this.fontFamily}get pageTextures(){return R(H,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}get size(){return R(H,"BitmapFont.size is deprecated, please use BitmapFont.fontMetrics.fontSize instead."),this.fontMetrics.fontSize}get distanceFieldRange(){return R(H,"BitmapFont.distanceFieldRange is deprecated, please use BitmapFont.distanceField.range instead."),this.distanceField.range}get distanceFieldType(){return R(H,"BitmapFont.distanceFieldType is deprecated, please use BitmapFont.distanceField.type instead."),this.distanceField.type}destroy(e=!1){var t;this.emit("destroy",this),this.removeAllListeners();for(const r in this.chars)(t=this.chars[r].texture)==null||t.destroy();this.chars=null,e&&(this.pages.forEach(r=>r.texture.destroy(!0)),this.pages=null)}}function V(n,e){if(n.texture===U.WHITE&&!n.fill)return G.shared.setValue(n.color).toHex();if(n.fill){if(n.fill instanceof Zt){const t=n.fill,r=e.createPattern(t.texture.source.resource,"repeat"),s=t.transform.copyTo(k.shared);return s.scale(t.texture.frame.width,t.texture.frame.height),r.setTransform(s),r}else if(n.fill instanceof Jt){const t=n.fill;if(t.type==="linear"){const r=e.createLinearGradient(t.x0,t.y0,t.x1,t.y1);return t.gradientStops.forEach(s=>{r.addColorStop(s.offset,G.shared.setValue(s.color).toHex())}),r}}}else{const t=e.createPattern(n.texture.source.resource,"repeat"),r=n.matrix.copyTo(k.shared);return r.scale(n.texture.frame.width,n.texture.frame.height),t.setTransform(r),t}return D("FillStyle not recognised",n),"red"}function ce(n){if(n==="")return[];typeof n=="string"&&(n=[n]);const e=[];for(let t=0,r=n.length;t<r;t++){const s=n[t];if(Array.isArray(s)){if(s.length!==2)throw new Error(`[BitmapFont]: Invalid character range length, expecting 2 got ${s.length}.`);if(s[0].length===0||s[1].length===0)throw new Error("[BitmapFont]: Invalid character delimiter.");const i=s[0].charCodeAt(0),o=s[1].charCodeAt(0);if(o<i)throw new Error("[BitmapFont]: Invalid character range.");for(let a=i,h=o;a<=h;a++)e.push(String.fromCharCode(a))}else e.push(...Array.from(s))}if(e.length===0)throw new Error("[BitmapFont]: Empty set when resolving characters.");return e}const pe=class at extends dt{constructor(e){super(),this.resolution=1,this.pages=[],this._padding=0,this._measureCache=Object.create(null),this._currentChars=[],this._currentX=0,this._currentY=0,this._currentPageIndex=-1,this._skipKerning=!1;const t={...at.defaultOptions,...e};this._textureSize=t.textureSize,this._mipmap=t.mipmap;const r=t.style.clone();t.overrideFill&&(r._fill.color=16777215,r._fill.alpha=1,r._fill.texture=U.WHITE,r._fill.fill=null),this.applyFillAsTint=t.overrideFill;const s=r.fontSize;r.fontSize=this.baseMeasurementFontSize;const i=se(r);t.overrideSize?r._stroke&&(r._stroke.width*=this.baseRenderedFontSize/s):r.fontSize=this.baseRenderedFontSize=s,this._style=r,this._skipKerning=t.skipKerning??!1,this.resolution=t.resolution??1,this._padding=t.padding??4,this.fontMetrics=O.measureFont(i),this.lineHeight=r.lineHeight||this.fontMetrics.fontSize||r.fontSize}ensureCharacters(e){var p,m;const t=ce(e).filter(x=>!this._currentChars.includes(x)).filter((x,b,y)=>y.indexOf(x)===b);if(!t.length)return;this._currentChars=[...this._currentChars,...t];let r;this._currentPageIndex===-1?r=this._nextPage():r=this.pages[this._currentPageIndex];let{canvas:s,context:i}=r.canvasAndContext,o=r.texture.source;const a=this._style;let h=this._currentX,l=this._currentY;const u=this.baseRenderedFontSize/this.baseMeasurementFontSize,d=this._padding*u,g=a.fontStyle==="italic"?2:1;let c=0,f=!1;for(let x=0;x<t.length;x++){const b=t[x],y=O.measureText(b,a,s,!1);y.lineHeight=y.height;const P=g*y.width*u,v=y.height*u,w=P+d*2,M=v+d*2;if(f=!1,b!==`
`&&b!=="\r"&&b!=="	"&&b!==" "&&(f=!0,c=Math.ceil(Math.max(M,c))),h+w>this._textureSize&&(l+=c,c=M,h=0,l+c>this._textureSize)){o.update();const z=this._nextPage();s=z.canvasAndContext.canvas,i=z.canvasAndContext.context,o=z.texture.source,l=0}const F=P/u-(((p=a.dropShadow)==null?void 0:p.distance)??0)-(((m=a._stroke)==null?void 0:m.width)??0);if(this.chars[b]={id:b.codePointAt(0),xOffset:-this._padding,yOffset:-this._padding,xAdvance:F,kerning:{}},f){this._drawGlyph(i,y,h+d,l+d,u,a);const z=o.width*u,I=o.height*u,re=new ie(h/z*o.width,l/I*o.height,w/z*o.width,M/I*o.height);this.chars[b].texture=new U({source:o,frame:re}),h+=Math.ceil(w)}}o.update(),this._currentX=h,this._currentY=l,this._skipKerning&&this._applyKerning(t,i)}get pageTextures(){return R(H,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}_applyKerning(e,t){const r=this._measureCache;for(let s=0;s<e.length;s++){const i=e[s];for(let o=0;o<this._currentChars.length;o++){const a=this._currentChars[o];let h=r[i];h||(h=r[i]=t.measureText(i).width);let l=r[a];l||(l=r[a]=t.measureText(a).width);let u=t.measureText(i+a).width,d=u-(h+l);d&&(this.chars[i].kerning[a]=d),u=t.measureText(i+a).width,d=u-(h+l),d&&(this.chars[a].kerning[i]=d)}}}_nextPage(){this._currentPageIndex++;const e=this.resolution,t=W.getOptimalCanvasAndContext(this._textureSize,this._textureSize,e);this._setupContext(t.context,this._style,e);const r=e*(this.baseRenderedFontSize/this.baseMeasurementFontSize),s=new U({source:new Qt({resource:t.canvas,resolution:r,alphaMode:"premultiply-alpha-on-upload",autoGenerateMipmaps:this._mipmap})}),i={canvasAndContext:t,texture:s};return this.pages[this._currentPageIndex]=i,i}_setupContext(e,t,r){t.fontSize=this.baseRenderedFontSize,e.scale(r,r),e.font=se(t),t.fontSize=this.baseMeasurementFontSize,e.textBaseline=t.textBaseline;const s=t._stroke,i=(s==null?void 0:s.width)??0;if(s&&(e.lineWidth=i,e.lineJoin=s.join,e.miterLimit=s.miterLimit,e.strokeStyle=V(s,e)),t._fill&&(e.fillStyle=V(t._fill,e)),t.dropShadow){const o=t.dropShadow,a=G.shared.setValue(o.color).toArray(),h=o.blur*r,l=o.distance*r;e.shadowColor=`rgba(${a[0]*255},${a[1]*255},${a[2]*255},${o.alpha})`,e.shadowBlur=h,e.shadowOffsetX=Math.cos(o.angle)*l,e.shadowOffsetY=Math.sin(o.angle)*l}else e.shadowColor="black",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0}_drawGlyph(e,t,r,s,i,o){var f;const a=t.text,h=t.fontProperties,l=(((f=o._stroke)==null?void 0:f.width)??0)*i,u=r+l/2,d=s-l/2,g=h.descent*i,c=t.lineHeight*i;o.stroke&&l&&e.strokeText(a,u,d+c-g),o._fill&&e.fillText(a,u,d+c-g)}destroy(){super.destroy();for(let e=0;e<this.pages.length;e++){const{canvasAndContext:t,texture:r}=this.pages[e];t.canvas.width=t.canvas.width,W.returnCanvasAndContext(t),r.destroy(!0)}this.pages=null}};pe.defaultOptions={textureSize:512,style:new E,mipmap:!0};let fe=pe;function ge(n,e,t){const r={width:0,height:0,offsetY:0,scale:e.fontSize/t.baseMeasurementFontSize,lines:[{width:0,charPositions:[],spaceWidth:0,spacesIndex:[],chars:[]}]};r.offsetY=t.baseLineOffset;let s=r.lines[0],i=null,o=!0;const a={spaceWord:!1,width:0,start:0,index:0,positions:[],chars:[]},h=c=>{const f=s.width;for(let p=0;p<a.index;p++){const m=c.positions[p];s.chars.push(c.chars[p]),s.charPositions.push(m+f)}s.width+=c.width,o=!1,a.width=0,a.index=0,a.chars.length=0},l=()=>{let c=s.chars.length-1,f=s.chars[c];for(;f===" ";)s.width-=t.chars[f].xAdvance,f=s.chars[--c];r.width=Math.max(r.width,s.width),s={width:0,charPositions:[],chars:[],spaceWidth:0,spacesIndex:[]},o=!0,r.lines.push(s),r.height+=t.lineHeight},u=t.baseMeasurementFontSize/e.fontSize,d=e.letterSpacing*u,g=e.wordWrapWidth*u;for(let c=0;c<n.length+1;c++){let f;const p=c===n.length;p||(f=n[c]);const m=t.chars[f]||t.chars[" "];if(/(?:\s)/.test(f)||f==="\r"||f===`
`||p){if(!o&&e.wordWrap&&s.width+a.width-d>g?(l(),h(a),p||s.charPositions.push(0)):(a.start=s.width,h(a),p||s.charPositions.push(0)),f==="\r"||f===`
`)s.width!==0&&l();else if(!p){const x=m.xAdvance+(m.kerning[i]||0)+d;s.width+=x,s.spaceWidth=x,s.spacesIndex.push(s.charPositions.length),s.chars.push(f)}}else{const x=m.kerning[i]||0,b=m.xAdvance+x+d;a.positions[a.index++]=a.width+x,a.chars.push(f),a.width+=b}i=f}return l(),e.align==="center"?ut(r):e.align==="right"?ct(r):e.align==="justify"&&pt(r),r}function ut(n){for(let e=0;e<n.lines.length;e++){const t=n.lines[e],r=n.width/2-t.width/2;for(let s=0;s<t.charPositions.length;s++)t.charPositions[s]+=r}}function ct(n){for(let e=0;e<n.lines.length;e++){const t=n.lines[e],r=n.width-t.width;for(let s=0;s<t.charPositions.length;s++)t.charPositions[s]+=r}}function pt(n){const e=n.width;for(let t=0;t<n.lines.length;t++){const r=n.lines[t];let s=0,i=r.spacesIndex[s++],o=0;const a=r.spacesIndex.length,h=(e-r.width)/a;for(let l=0;l<r.charPositions.length;l++)l===i&&(i=r.spacesIndex[s++],o+=h),r.charPositions[l]+=o}}let Y=0;class ft{constructor(){this.ALPHA=[["a","z"],["A","Z"]," "],this.NUMERIC=[["0","9"]],this.ALPHANUMERIC=[["a","z"],["A","Z"],["0","9"]," "],this.ASCII=[[" ","~"]],this.defaultOptions={chars:this.ALPHANUMERIC,resolution:1,padding:4,skipKerning:!1}}getFont(e,t){var o;let r=`${t.fontFamily}-bitmap`,s=!0;if(t._fill.fill&&!t._stroke)r+=t._fill.fill.styleKey,s=!1;else if(t._stroke||t.dropShadow){let a=t.styleKey;a=a.substring(0,a.lastIndexOf("-")),r=`${a}-bitmap`,s=!1}if(!B.has(r)){const a=new fe({style:t,overrideFill:s,overrideSize:!0,...this.defaultOptions});Y++,Y>50&&D("BitmapText",`You have dynamically created ${Y} bitmap fonts, this can be inefficient. Try pre installing your font styles using \`BitmapFont.install({name:"style1", style})\``),a.once("destroy",()=>{Y--,B.remove(r)}),B.set(r,a)}const i=B.get(r);return(o=i.ensureCharacters)==null||o.call(i,e),i}getLayout(e,t){const r=this.getFont(e,t);return ge([...e],t,r)}measureText(e,t){return this.getLayout(e,t)}install(...e){var l,u,d,g;let t=e[0];typeof t=="string"&&(t={name:t,style:e[1],chars:(l=e[2])==null?void 0:l.chars,resolution:(u=e[2])==null?void 0:u.resolution,padding:(d=e[2])==null?void 0:d.padding,skipKerning:(g=e[2])==null?void 0:g.skipKerning},R(H,"BitmapFontManager.install(name, style, options) is deprecated, use BitmapFontManager.install({name, style, ...options})"));const r=t==null?void 0:t.name;if(!r)throw new Error("[BitmapFontManager] Property `name` is required.");t={...this.defaultOptions,...t};const s=t.style,i=s instanceof E?s:new E(s),o=i._fill.fill!==null&&i._fill.fill!==void 0,a=new fe({style:i,overrideFill:o,skipKerning:t.skipKerning,padding:t.padding,resolution:t.resolution,overrideSize:!1}),h=ce(t.chars);return a.ensureCharacters(h.join("")),B.set(`${r}-bitmap`,a),a.once("destroy",()=>B.remove(`${r}-bitmap`)),a}uninstall(e){const t=`${e}-bitmap`,r=B.get(t);r&&(B.remove(t),r.destroy())}}const gt=new ft;class me{constructor(e){this._renderer=e}push(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",canBundle:!1,action:"pushFilter",container:t,filterEffect:e})}pop(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",action:"popFilter",canBundle:!1})}execute(e){e.action==="pushFilter"?this._renderer.filter.push(e):e.action==="popFilter"&&this._renderer.filter.pop()}destroy(){this._renderer=null}}me.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"filter"};const mt=new k;function xt(n,e){return e.clear(),xe(n,e),e.isValid||e.set(0,0,0,0),n.renderGroup?e.applyMatrix(n.renderGroup.localTransform):e.applyMatrix(n.parentRenderGroup.worldTransform),e}function xe(n,e){if(n.localDisplayStatus!==7||!n.measurable)return;const t=!!n.effects.length;let r=e;if((n.renderGroup||t)&&(r=ne.get().clear()),n.boundsArea)e.addRect(n.boundsArea,n.worldTransform);else{if(n.renderPipeId){const i=n.bounds;r.addFrame(i.minX,i.minY,i.maxX,i.maxY,n.groupTransform)}const s=n.children;for(let i=0;i<s.length;i++)xe(s[i],r)}if(t){let s=!1;for(let i=0;i<n.effects.length;i++)n.effects[i].addBounds&&(s||(s=!0,r.applyMatrix(n.parentRenderGroup.worldTransform)),n.effects[i].addBounds(r,!0));s&&(r.applyMatrix(n.parentRenderGroup.worldTransform.copyTo(mt).invert()),e.addBounds(r,n.relativeGroupTransform)),e.addBounds(r),ne.return(r)}else n.renderGroup&&(e.addBounds(r,n.relativeGroupTransform),ne.return(r))}function _t(n,e){e.clear();const t=e.matrix;for(let r=0;r<n.length;r++){const s=n[r];s.globalDisplayStatus<7||(e.matrix=s.worldTransform,s.addBounds(e))}return e.matrix=t,e}const bt=new Ke({attributes:{aPosition:{buffer:new Float32Array([0,0,1,0,1,1,0,1]),location:0,format:"float32x2",stride:2*4,offset:0}},indexBuffer:new Uint32Array([0,1,2,0,2,3])});class _e{constructor(e){this._filterStackIndex=0,this._filterStack=[],this._filterGlobalUniforms=new $({uInputSize:{value:new Float32Array(4),type:"vec4<f32>"},uInputPixel:{value:new Float32Array(4),type:"vec4<f32>"},uInputClamp:{value:new Float32Array(4),type:"vec4<f32>"},uOutputFrame:{value:new Float32Array(4),type:"vec4<f32>"},uGlobalFrame:{value:new Float32Array(4),type:"vec4<f32>"},uOutputTexture:{value:new Float32Array(4),type:"vec4<f32>"}}),this._globalFilterBindGroup=new je({}),this.renderer=e}get activeBackTexture(){var e;return(e=this._activeFilterData)==null?void 0:e.backTexture}push(e){var c;const t=this.renderer,r=e.filterEffect.filters;this._filterStack[this._filterStackIndex]||(this._filterStack[this._filterStackIndex]=this._getFilterData());const s=this._filterStack[this._filterStackIndex];if(this._filterStackIndex++,r.length===0){s.skip=!0;return}const i=s.bounds;e.renderables?_t(e.renderables,i):e.filterEffect.filterArea?(i.clear(),i.addRect(e.filterEffect.filterArea),i.applyMatrix(e.container.worldTransform)):xt(e.container,i);const o=t.renderTarget.renderTarget.colorTexture.source;let a=1/0,h=0,l=!0,u=!1,d=!1;for(let f=0;f<r.length;f++){const p=r[f];if(a=Math.min(a,p.resolution==="inherit"?o._resolution:p.resolution),h+=p.padding,p.antialias==="off"?l=!1:p.antialias==="inherit"&&l&&(l=o.antialias),!(p.compatibleRenderers&t.type)){d=!1;break}if(p.blendRequired&&!(((c=t.backBuffer)==null?void 0:c.useBackBuffer)??!0)){D("Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options."),d=!1;break}d=p.enabled||d,u=u||p.blendRequired}if(!d){s.skip=!0;return}const g=t.renderTarget.rootViewPort;if(i.scale(a).fitBounds(0,g.width,0,g.height).scale(1/a).pad(h).ceil(),!i.isPositive){s.skip=!0;return}s.skip=!1,s.bounds=i,s.blendRequired=u,s.container=e.container,s.filterEffect=e.filterEffect,s.previousRenderSurface=t.renderTarget.renderSurface,s.inputTexture=A.getOptimalTexture(i.width,i.height,a,l),t.renderTarget.bind(s.inputTexture,!0),t.globalUniforms.push({offset:i})}pop(){const e=this.renderer;this._filterStackIndex--;const t=this._filterStack[this._filterStackIndex];if(t.skip)return;this._activeFilterData=t;const r=t.inputTexture,s=t.bounds;let i=U.EMPTY;if(e.renderTarget.finishRenderPass(),t.blendRequired){const a=this._filterStackIndex>0?this._filterStack[this._filterStackIndex-1].bounds:null,h=e.renderTarget.getRenderTarget(t.previousRenderSurface);i=this.getBackTexture(h,s,a)}t.backTexture=i;const o=t.filterEffect.filters;if(this._globalFilterBindGroup.setResource(r.source.style,2),this._globalFilterBindGroup.setResource(i.source,3),e.globalUniforms.pop(),o.length===1)o[0].apply(this,r,t.previousRenderSurface,!1),A.returnTexture(r);else{let a=t.inputTexture,h=A.getOptimalTexture(s.width,s.height,a.source._resolution,!1),l=0;for(l=0;l<o.length-1;++l){o[l].apply(this,a,h,!0);const u=a;a=h,h=u}o[l].apply(this,a,t.previousRenderSurface,!1),A.returnTexture(a),A.returnTexture(h)}t.blendRequired&&A.returnTexture(i)}getBackTexture(e,t,r){const s=e.colorTexture.source._resolution,i=A.getOptimalTexture(t.width,t.height,s,!1);let o=t.minX,a=t.minY;r&&(o-=r.minX,a-=r.minY),o=Math.floor(o*s),a=Math.floor(a*s);const h=Math.ceil(t.width*s),l=Math.ceil(t.height*s);return this.renderer.renderTarget.copyToTexture(e,i,{x:o,y:a},{width:h,height:l},{x:0,y:0}),i}applyFilter(e,t,r,s){const i=this.renderer,o=this._filterStack[this._filterStackIndex],a=o.bounds,h=er.shared,l=o.previousRenderSurface===r;let u=this.renderer.renderTarget.rootRenderTarget.colorTexture.source._resolution,d=this._filterStackIndex-1;for(;d>0&&this._filterStack[d].skip;)--d;d>0&&(u=this._filterStack[d].inputTexture.source._resolution);const g=this._filterGlobalUniforms,c=g.uniforms,f=c.uOutputFrame,p=c.uInputSize,m=c.uInputPixel,x=c.uInputClamp,b=c.uGlobalFrame,y=c.uOutputTexture;if(l){let w=this._filterStackIndex;for(;w>0;){w--;const M=this._filterStack[this._filterStackIndex-1];if(!M.skip){h.x=M.bounds.minX,h.y=M.bounds.minY;break}}f[0]=a.minX-h.x,f[1]=a.minY-h.y}else f[0]=0,f[1]=0;f[2]=t.frame.width,f[3]=t.frame.height,p[0]=t.source.width,p[1]=t.source.height,p[2]=1/p[0],p[3]=1/p[1],m[0]=t.source.pixelWidth,m[1]=t.source.pixelHeight,m[2]=1/m[0],m[3]=1/m[1],x[0]=.5*m[2],x[1]=.5*m[3],x[2]=t.frame.width*p[2]-.5*m[2],x[3]=t.frame.height*p[3]-.5*m[3];const P=this.renderer.renderTarget.rootRenderTarget.colorTexture;b[0]=h.x*u,b[1]=h.y*u,b[2]=P.source.width*u,b[3]=P.source.height*u;const v=this.renderer.renderTarget.getRenderTarget(r);if(i.renderTarget.bind(r,!!s),r instanceof U?(y[0]=r.frame.width,y[1]=r.frame.height):(y[0]=v.width,y[1]=v.height),y[2]=v.isRoot?-1:1,g.update(),i.renderPipes.uniformBatch){const w=i.renderPipes.uniformBatch.getUboResource(g);this._globalFilterBindGroup.setResource(w,0)}else this._globalFilterBindGroup.setResource(g,0);this._globalFilterBindGroup.setResource(t.source,1),this._globalFilterBindGroup.setResource(t.source.style,2),e.groups[0]=this._globalFilterBindGroup,i.encoder.draw({geometry:bt,shader:e,state:e._state,topology:"triangle-list"}),i.type===he.WEBGL&&i.renderTarget.finishRenderPass()}_getFilterData(){return{skip:!1,inputTexture:null,bounds:new qe,container:null,filterEffect:null,blendRequired:!1,previousRenderSurface:null}}calculateSpriteMatrix(e,t){const r=this._activeFilterData,s=e.set(r.inputTexture._source.width,0,0,r.inputTexture._source.height,r.bounds.minX,r.bounds.minY),i=t.worldTransform.copyTo(k.shared);return i.invert(),s.prepend(i),s.scale(1/t.texture.frame.width,1/t.texture.frame.height),s.translate(t.anchor.x,t.anchor.y),s}}_e.extension={type:[_.WebGLSystem,_.WebGPUSystem],name:"filter"};const be=class ot extends Ke{constructor(...e){let t=e[0]??{};t instanceof Float32Array&&(R(H,"use new MeshGeometry({ positions, uvs, indices }) instead"),t={positions:t,uvs:e[1],indices:e[2]}),t={...ot.defaultOptions,...t};const r=t.positions||new Float32Array([0,0,1,0,1,1,0,1]),s=t.uvs||new Float32Array([0,0,1,0,1,1,0,1]),i=t.indices||new Uint32Array([0,1,2,0,2,3]),o=t.shrinkBuffersToFit,a=new ae({data:r,label:"attribute-mesh-positions",shrinkToFit:o,usage:L.VERTEX|L.COPY_DST}),h=new ae({data:s,label:"attribute-mesh-uvs",shrinkToFit:o,usage:L.VERTEX|L.COPY_DST}),l=new ae({data:i,label:"index-mesh-buffer",shrinkToFit:o,usage:L.INDEX|L.COPY_DST});super({attributes:{aPosition:{buffer:a,format:"float32x2",stride:2*4,offset:0},aUV:{buffer:h,format:"float32x2",stride:2*4,offset:0}},indexBuffer:l,topology:t.topology}),this.batchMode="auto"}get positions(){return this.attributes.aPosition.buffer.data}set positions(e){this.attributes.aPosition.buffer.data=e}get uvs(){return this.attributes.aUV.buffer.data}set uvs(e){this.attributes.aUV.buffer.data=e}get indices(){return this.indexBuffer.data}set indices(e){this.indexBuffer.data=e}};be.defaultOptions={topology:"triangle-list",shrinkBuffersToFit:!1};let j=be;function yt(n){const e=n._stroke,t=n._fill,r=[`div { ${[`color: ${G.shared.setValue(t.color).toHex()}`,`font-size: ${n.fontSize}px`,`font-family: ${n.fontFamily}`,`font-weight: ${n.fontWeight}`,`font-style: ${n.fontStyle}`,`font-variant: ${n.fontVariant}`,`letter-spacing: ${n.letterSpacing}px`,`text-align: ${n.align}`,`padding: ${n.padding}px`,`white-space: ${n.whiteSpace==="pre"&&n.wordWrap?"pre-wrap":n.whiteSpace}`,...n.lineHeight?[`line-height: ${n.lineHeight}px`]:[],...n.wordWrap?[`word-wrap: ${n.breakWords?"break-all":"break-word"}`,`max-width: ${n.wordWrapWidth}px`]:[],...e?[Te(e)]:[],...n.dropShadow?[ye(n.dropShadow)]:[],...n.cssOverrides].join(";")} }`];return Tt(n.tagStyles,r),r.join(" ")}function ye(n){const e=G.shared.setValue(n.color).setAlpha(n.alpha).toHexa(),t=Math.round(Math.cos(n.angle)*n.distance),r=Math.round(Math.sin(n.angle)*n.distance),s=`${t}px ${r}px`;return n.blur>0?`text-shadow: ${s} ${n.blur}px ${e}`:`text-shadow: ${s} ${e}`}function Te(n){return[`-webkit-text-stroke-width: ${n.width}px`,`-webkit-text-stroke-color: ${G.shared.setValue(n.color).toHex()}`,`text-stroke-width: ${n.width}px`,`text-stroke-color: ${G.shared.setValue(n.color).toHex()}`,"paint-order: stroke"].join(";")}const ve={fontSize:"font-size: {{VALUE}}px",fontFamily:"font-family: {{VALUE}}",fontWeight:"font-weight: {{VALUE}}",fontStyle:"font-style: {{VALUE}}",fontVariant:"font-variant: {{VALUE}}",letterSpacing:"letter-spacing: {{VALUE}}px",align:"text-align: {{VALUE}}",padding:"padding: {{VALUE}}px",whiteSpace:"white-space: {{VALUE}}",lineHeight:"line-height: {{VALUE}}px",wordWrapWidth:"max-width: {{VALUE}}px"},we={fill:n=>`color: ${G.shared.setValue(n).toHex()}`,breakWords:n=>`word-wrap: ${n?"break-all":"break-word"}`,stroke:Te,dropShadow:ye};function Tt(n,e){for(const t in n){const r=n[t],s=[];for(const i in r)we[i]?s.push(we[i](r[i])):ve[i]&&s.push(ve[i].replace("{{VALUE}}",r[i]));e.push(`${t} { ${s.join(";")} }`)}}class q extends E{constructor(e={}){super(e),this._cssOverrides=[],this.cssOverrides??(this.cssOverrides=e.cssOverrides),this.tagStyles=e.tagStyles??{}}set cssOverrides(e){this._cssOverrides=e instanceof Array?e:[e],this.update()}get cssOverrides(){return this._cssOverrides}_generateKey(){return this._styleKey=tr(this)+this._cssOverrides.join("-"),this._styleKey}update(){this._cssStyle=null,super.update()}clone(){return new q({align:this.align,breakWords:this.breakWords,dropShadow:this.dropShadow?{...this.dropShadow}:null,fill:this._fill,fontFamily:this.fontFamily,fontSize:this.fontSize,fontStyle:this.fontStyle,fontVariant:this.fontVariant,fontWeight:this.fontWeight,letterSpacing:this.letterSpacing,lineHeight:this.lineHeight,padding:this.padding,stroke:this._stroke,whiteSpace:this.whiteSpace,wordWrap:this.wordWrap,wordWrapWidth:this.wordWrapWidth,cssOverrides:this.cssOverrides})}get cssStyle(){return this._cssStyle||(this._cssStyle=yt(this)),this._cssStyle}addOverride(...e){const t=e.filter(r=>!this.cssOverrides.includes(r));t.length>0&&(this.cssOverrides.push(...t),this.update())}removeOverride(...e){const t=e.filter(r=>this.cssOverrides.includes(r));t.length>0&&(this.cssOverrides=this.cssOverrides.filter(r=>!t.includes(r)),this.update())}set fill(e){typeof e!="string"&&typeof e!="number"&&D("[HTMLTextStyle] only color fill is not supported by HTMLText"),super.fill=e}set stroke(e){e&&typeof e!="string"&&typeof e!="number"&&D("[HTMLTextStyle] only color stroke is not supported by HTMLText"),super.stroke=e}}const Se="http://www.w3.org/2000/svg",Ce="http://www.w3.org/1999/xhtml";class Me{constructor(){this.svgRoot=document.createElementNS(Se,"svg"),this.foreignObject=document.createElementNS(Se,"foreignObject"),this.domElement=document.createElementNS(Ce,"div"),this.styleElement=document.createElementNS(Ce,"style"),this.image=new Image;const{foreignObject:e,svgRoot:t,styleElement:r,domElement:s}=this;e.setAttribute("width","10000"),e.setAttribute("height","10000"),e.style.overflow="hidden",t.appendChild(e),e.appendChild(r),e.appendChild(s)}}let Be;function vt(n,e,t,r){r=r||Be||(Be=new Me);const{domElement:s,styleElement:i,svgRoot:o}=r;s.innerHTML=`<style>${e.cssStyle}</style><div>${n}</div>`,s.setAttribute("style","transform-origin: top left; display: inline-block"),t&&(i.textContent=t),document.body.appendChild(o);const a=s.getBoundingClientRect();o.remove();const h=O.measureFont(e.fontStyle).descent;return{width:a.width,height:a.height+h}}class Pe{constructor(e,t){this.state=Qe.for2d(),this._graphicsBatchesHash=Object.create(null),this.renderer=e,this._adaptor=t,this._adaptor.init()}validateRenderable(e){const t=e.context,r=!!this._graphicsBatchesHash[e.uid],s=this.renderer.graphicsContext.updateGpuContext(t);return!!(s.isBatchable||r!==s.isBatchable)}addRenderable(e,t){const r=this.renderer.graphicsContext.updateGpuContext(e.context);e._didGraphicsUpdate&&(e._didGraphicsUpdate=!1,this._rebuild(e)),r.isBatchable?this._addToBatcher(e):(this.renderer.renderPipes.batch.break(t),t.add(e))}updateRenderable(e){const t=this._graphicsBatchesHash[e.uid];if(t)for(let r=0;r<t.length;r++){const s=t[r];s.batcher.updateElement(s)}}destroyRenderable(e){this._graphicsBatchesHash[e.uid]&&this._removeBatchForRenderable(e.uid)}execute(e){if(!e.isRenderable)return;const t=this.renderer,r=e.context;if(!t.graphicsContext.getGpuContext(r).batches.length)return;const s=r.customShader||this._adaptor.shader;this.state.blendMode=e.groupBlendMode;const i=s.resources.localUniforms.uniforms;i.uTransformMatrix=e.groupTransform,i.uRound=t._roundPixels|e._roundPixels,le(e.groupColorAlpha,i.uColor,0),this._adaptor.execute(this,e)}_rebuild(e){const t=!!this._graphicsBatchesHash[e.uid],r=this.renderer.graphicsContext.updateGpuContext(e.context);t&&this._removeBatchForRenderable(e.uid),r.isBatchable&&this._initBatchesForRenderable(e),e.batched=r.isBatchable}_addToBatcher(e){const t=this.renderer.renderPipes.batch,r=this._getBatchesForRenderable(e);for(let s=0;s<r.length;s++){const i=r[s];t.addToBatch(i)}}_getBatchesForRenderable(e){return this._graphicsBatchesHash[e.uid]||this._initBatchesForRenderable(e)}_initBatchesForRenderable(e){const t=e.context,r=this.renderer.graphicsContext.getGpuContext(t),s=this.renderer._roundPixels|e._roundPixels,i=r.batches.map(o=>{const a=T.get(rr);return o.copyTo(a),a.renderable=e,a.roundPixels=s,a});return this._graphicsBatchesHash[e.uid]===void 0&&e.on("destroyed",()=>{this.destroyRenderable(e)}),this._graphicsBatchesHash[e.uid]=i,i}_removeBatchForRenderable(e){this._graphicsBatchesHash[e].forEach(t=>{T.return(t)}),this._graphicsBatchesHash[e]=null}destroy(){this.renderer=null,this._adaptor.destroy(),this._adaptor=null,this.state=null;for(const e in this._graphicsBatchesHash)this._removeBatchForRenderable(e);this._graphicsBatchesHash=null}}Pe.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"graphics"};const Fe=class ht extends j{constructor(...e){super({});let t=e[0]??{};typeof t=="number"&&(R(H,"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead"),t={width:t,height:e[1],verticesX:e[2],verticesY:e[3]}),this.build(t)}build(e){e={...ht.defaultOptions,...e},this.verticesX=this.verticesX??e.verticesX,this.verticesY=this.verticesY??e.verticesY,this.width=this.width??e.width,this.height=this.height??e.height;const t=this.verticesX*this.verticesY,r=[],s=[],i=[],o=this.verticesX-1,a=this.verticesY-1,h=this.width/o,l=this.height/a;for(let d=0;d<t;d++){const g=d%this.verticesX,c=d/this.verticesX|0;r.push(g*h,c*l),s.push(g/o,c/a)}const u=o*a;for(let d=0;d<u;d++){const g=d%o,c=d/o|0,f=c*this.verticesX+g,p=c*this.verticesX+g+1,m=(c+1)*this.verticesX+g,x=(c+1)*this.verticesX+g+1;i.push(f,p,m,p,x,m)}this.buffers[0].data=new Float32Array(r),this.buffers[1].data=new Float32Array(s),this.indexBuffer.data=new Uint32Array(i),this.buffers[0].update(),this.buffers[1].update(),this.indexBuffer.update()}};Fe.defaultOptions={width:100,height:100,verticesX:10,verticesY:10};let wt=Fe;class N{constructor(){this.batcher=null,this.batch=null,this.roundPixels=0,this._uvUpdateId=-1,this._textureMatrixUpdateId=-1}get blendMode(){return this.mesh.groupBlendMode}reset(){this.mesh=null,this.texture=null,this.batcher=null,this.batch=null}packIndex(e,t,r){const s=this.geometry.indices;for(let i=0;i<s.length;i++)e[t++]=s[i]+r}packAttributes(e,t,r,s){const i=this.mesh,o=this.geometry,a=i.groupTransform,h=s<<16|this.roundPixels&65535,l=a.a,u=a.b,d=a.c,g=a.d,c=a.tx,f=a.ty,p=o.positions,m=o.getBuffer("aUV"),x=m.data;let b=x;const y=this.texture.textureMatrix;y.isSimple||(b=this._transformedUvs,(this._textureMatrixUpdateId!==y._updateID||this._uvUpdateId!==m._updateID)&&((!b||b.length<x.length)&&(b=this._transformedUvs=new Float32Array(x.length)),this._textureMatrixUpdateId=y._updateID,this._uvUpdateId=m._updateID,y.multiplyUvs(x,b)));const P=i.groupColorAlpha;for(let v=0;v<p.length;v+=2){const w=p[v],M=p[v+1];e[r]=l*w+d*M+c,e[r+1]=u*w+g*M+f,e[r+2]=b[v],e[r+3]=b[v+1],t[r+4]=P,t[r+5]=h,r+=6}}get vertexSize(){return this.geometry.positions.length/2}get indexSize(){return this.geometry.indices.length}}class Re{constructor(e,t){this.localUniforms=new $({uTransformMatrix:{value:new k,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),this.localUniformsBindGroup=new je({0:this.localUniforms}),this._meshDataHash=Object.create(null),this._gpuBatchableMeshHash=Object.create(null),this.renderer=e,this._adaptor=t,this._adaptor.init()}validateRenderable(e){const t=this._getMeshData(e),r=t.batched,s=e.batched;if(t.batched=s,r!==s)return!0;if(s){const i=e._geometry;if(i.indices.length!==t.indexSize||i.positions.length!==t.vertexSize)return t.indexSize=i.indices.length,t.vertexSize=i.positions.length,!0;const o=this._getBatchableMesh(e),a=e.texture;if(o.texture._source!==a._source&&o.texture._source!==a._source)return!o.batcher.checkAndUpdateTexture(o,a)}return!1}addRenderable(e,t){const r=this.renderer.renderPipes.batch,{batched:s}=this._getMeshData(e);if(s){const i=this._getBatchableMesh(e);i.texture=e._texture,i.geometry=e._geometry,r.addToBatch(i)}else r.break(t),t.add({renderPipeId:"mesh",mesh:e})}updateRenderable(e){if(e.batched){const t=this._gpuBatchableMeshHash[e.uid];t.texture=e._texture,t.geometry=e._geometry,t.batcher.updateElement(t)}}destroyRenderable(e){this._meshDataHash[e.uid]=null;const t=this._gpuBatchableMeshHash[e.uid];t&&(T.return(t),this._gpuBatchableMeshHash[e.uid]=null)}execute({mesh:e}){if(!e.isRenderable)return;e.state.blendMode=Ne(e.groupBlendMode,e.texture._source);const t=this.localUniforms;t.uniforms.uTransformMatrix=e.groupTransform,t.uniforms.uRound=this.renderer._roundPixels|e._roundPixels,t.update(),le(e.groupColorAlpha,t.uniforms.uColor,0),this._adaptor.execute(this,e)}_getMeshData(e){return this._meshDataHash[e.uid]||this._initMeshData(e)}_initMeshData(e){var t,r;return this._meshDataHash[e.uid]={batched:e.batched,indexSize:(t=e._geometry.indices)==null?void 0:t.length,vertexSize:(r=e._geometry.positions)==null?void 0:r.length},e.on("destroyed",()=>{this.destroyRenderable(e)}),this._meshDataHash[e.uid]}_getBatchableMesh(e){return this._gpuBatchableMeshHash[e.uid]||this._initBatchableMesh(e)}_initBatchableMesh(e){const t=T.get(N);return t.mesh=e,t.texture=e._texture,t.roundPixels=this.renderer._roundPixels|e._roundPixels,this._gpuBatchableMeshHash[e.uid]=t,t.mesh=e,t}destroy(){for(const e in this._gpuBatchableMeshHash)this._gpuBatchableMeshHash[e]&&T.return(this._gpuBatchableMeshHash[e]);this._gpuBatchableMeshHash=null,this._meshDataHash=null,this.localUniforms=null,this.localUniformsBindGroup=null,this._adaptor.destroy(),this._adaptor=null,this.renderer=null}}Re.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"mesh"};const Ue=class lt extends wt{constructor(e={}){e={...lt.defaultOptions,...e},super({width:e.width,height:e.height,verticesX:4,verticesY:4}),this.update(e)}update(e){this.width=e.width??this.width,this.height=e.height??this.height,this._originalWidth=e.originalWidth??this._originalWidth,this._originalHeight=e.originalHeight??this._originalHeight,this._leftWidth=e.leftWidth??this._leftWidth,this._rightWidth=e.rightWidth??this._rightWidth,this._topHeight=e.topHeight??this._topHeight,this._bottomHeight=e.bottomHeight??this._bottomHeight,this.updateUvs(),this.updatePositions()}updatePositions(){const e=this.positions,t=this._leftWidth+this._rightWidth,r=this.width>t?1:this.width/t,s=this._topHeight+this._bottomHeight,i=this.height>s?1:this.height/s,o=Math.min(r,i);e[9]=e[11]=e[13]=e[15]=this._topHeight*o,e[17]=e[19]=e[21]=e[23]=this.height-this._bottomHeight*o,e[25]=e[27]=e[29]=e[31]=this.height,e[2]=e[10]=e[18]=e[26]=this._leftWidth*o,e[4]=e[12]=e[20]=e[28]=this.width-this._rightWidth*o,e[6]=e[14]=e[22]=e[30]=this.width,this.getBuffer("aPosition").update()}updateUvs(){const e=this.uvs;e[0]=e[8]=e[16]=e[24]=0,e[1]=e[3]=e[5]=e[7]=0,e[6]=e[14]=e[22]=e[30]=1,e[25]=e[27]=e[29]=e[31]=1;const t=1/this._originalWidth,r=1/this._originalHeight;e[2]=e[10]=e[18]=e[26]=t*this._leftWidth,e[9]=e[11]=e[13]=e[15]=r*this._topHeight,e[4]=e[12]=e[20]=e[28]=1-t*this._rightWidth,e[17]=e[19]=e[21]=e[23]=1-r*this._bottomHeight,this.getBuffer("aUV").update()}};Ue.defaultOptions={width:100,height:100,leftWidth:10,topHeight:10,rightWidth:10,bottomHeight:10,originalWidth:100,originalHeight:100};let St=Ue;class ke{constructor(e){this._gpuSpriteHash=Object.create(null),this._renderer=e}addRenderable(e,t){const r=this._getGpuSprite(e);e._didSpriteUpdate&&this._updateBatchableSprite(e,r),this._renderer.renderPipes.batch.addToBatch(r)}updateRenderable(e){const t=this._gpuSpriteHash[e.uid];e._didSpriteUpdate&&this._updateBatchableSprite(e,t),t.batcher.updateElement(t)}validateRenderable(e){const t=e._texture,r=this._getGpuSprite(e);return r.texture._source!==t._source?!r.batcher.checkAndUpdateTexture(r,t):!1}destroyRenderable(e){const t=this._gpuSpriteHash[e.uid];T.return(t),this._gpuSpriteHash[e.uid]=null}_updateBatchableSprite(e,t){e._didSpriteUpdate=!1,t.geometry.update(e),t.texture=e._texture}_getGpuSprite(e){return this._gpuSpriteHash[e.uid]||this._initGPUSprite(e)}_initGPUSprite(e){const t=new N;return t.geometry=new St,t.mesh=e,t.texture=e._texture,t.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuSpriteHash[e.uid]=t,e.on("destroyed",()=>{this.destroyRenderable(e)}),t}destroy(){for(const e in this._gpuSpriteHash)this._gpuSpriteHash[e].geometry.destroy();this._gpuSpriteHash=null,this._renderer=null}}ke.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"nineSliceSprite"};const Ct={name:"tiling-bit",vertex:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`
            uv = (tilingUniforms.uTextureTransform * vec3(uv, 1.0)).xy;

            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;
        `},fragment:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`

            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);
            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;
            var unclamped = coord;
            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);

            var bias = 0.;

            if(unclamped.x == coord.x && unclamped.y == coord.y)
            {
                bias = -32.;
            } 

            outColor = textureSampleBias(uTexture, uSampler, coord, bias);
        `}},Mt={name:"tiling-bit",vertex:{header:`
            uniform mat3 uTextureTransform;
            uniform vec4 uSizeAnchor;
        
        `,main:`
            uv = (uTextureTransform * vec3(aUV, 1.0)).xy;

            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;
        `},fragment:{header:`
            uniform sampler2D uTexture;
            uniform mat3 uMapCoord;
            uniform vec4 uClampFrame;
            uniform vec2 uClampOffset;
        `,main:`

        vec2 coord = vUV + ceil(uClampOffset - vUV);
        coord = (uMapCoord * vec3(coord, 1.0)).xy;
        vec2 unclamped = coord;
        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);
        
        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0
    
        `}};let Z,J;class Bt extends et{constructor(){Z??(Z=tt({name:"tiling-sprite-shader",bits:[or,Ct,st]})),J??(J=rt({name:"tiling-sprite-shader",bits:[hr,Mt,it]}));const e=new $({uMapCoord:{value:new k,type:"mat3x3<f32>"},uClampFrame:{value:new Float32Array([0,0,1,1]),type:"vec4<f32>"},uClampOffset:{value:new Float32Array([0,0]),type:"vec2<f32>"},uTextureTransform:{value:new k,type:"mat3x3<f32>"},uSizeAnchor:{value:new Float32Array([100,100,.5,.5]),type:"vec4<f32>"}});super({glProgram:J,gpuProgram:Z,resources:{localUniforms:new $({uTransformMatrix:{value:new k,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),tilingUniforms:e,uTexture:U.EMPTY.source,uSampler:U.EMPTY.source.style}})}updateUniforms(e,t,r,s,i,o){const a=this.resources.tilingUniforms,h=o.width,l=o.height,u=o.textureMatrix,d=a.uniforms.uTextureTransform;d.set(r.a*h/e,r.b*h/t,r.c*l/e,r.d*l/t,r.tx/e,r.ty/t),d.invert(),a.uniforms.uMapCoord=u.mapCoord,a.uniforms.uClampFrame=u.uClampFrame,a.uniforms.uClampOffset=u.uClampOffset,a.uniforms.uTextureTransform=d,a.uniforms.uSizeAnchor[0]=e,a.uniforms.uSizeAnchor[1]=t,a.uniforms.uSizeAnchor[2]=s,a.uniforms.uSizeAnchor[3]=i,o&&(this.resources.uTexture=o.source,this.resources.uSampler=o.source.style)}}class Pt extends j{constructor(){super({positions:new Float32Array([0,0,1,0,1,1,0,1]),uvs:new Float32Array([0,0,1,0,1,1,0,1]),indices:new Uint32Array([0,1,2,0,2,3])})}}function Ft(n,e){const t=n.anchor.x,r=n.anchor.y;e[0]=-t*n.width,e[1]=-r*n.height,e[2]=(1-t)*n.width,e[3]=-r*n.height,e[4]=(1-t)*n.width,e[5]=(1-r)*n.height,e[6]=-t*n.width,e[7]=(1-r)*n.height}function Rt(n,e,t,r){let s=0;const i=n.length/(e||2),o=r.a,a=r.b,h=r.c,l=r.d,u=r.tx,d=r.ty;for(t*=e;s<i;){const g=n[t],c=n[t+1];n[t]=o*g+h*c+u,n[t+1]=a*g+l*c+d,t+=e,s++}}function Ut(n,e){const t=n.texture,r=t.frame.width,s=t.frame.height;let i=0,o=0;n._applyAnchorToTexture&&(i=n.anchor.x,o=n.anchor.y),e[0]=e[6]=-i,e[2]=e[4]=1-i,e[1]=e[3]=-o,e[5]=e[7]=1-o;const a=k.shared;a.copyFrom(n._tileTransform.matrix),a.tx/=n.width,a.ty/=n.height,a.invert(),a.scale(n.width/r,n.height/s),Rt(e,2,0,a)}const X=new Pt;class Ae{constructor(e){this._state=Qe.default2d,this._tilingSpriteDataHash=Object.create(null),this._renderer=e}validateRenderable(e){const t=this._getTilingSpriteData(e),r=t.canBatch;this._updateCanBatch(e);const s=t.canBatch;if(s&&s===r){const{batchableMesh:i}=t;if(i&&i.texture._source!==e.texture._source)return!i.batcher.checkAndUpdateTexture(i,e.texture)}return r!==s}addRenderable(e,t){const r=this._renderer.renderPipes.batch;this._updateCanBatch(e);const s=this._getTilingSpriteData(e),{geometry:i,canBatch:o}=s;if(o){s.batchableMesh||(s.batchableMesh=new N);const a=s.batchableMesh;e._didTilingSpriteUpdate&&(e._didTilingSpriteUpdate=!1,this._updateBatchableMesh(e),a.geometry=i,a.mesh=e,a.texture=e._texture),a.roundPixels=this._renderer._roundPixels|e._roundPixels,r.addToBatch(a)}else r.break(t),s.shader||(s.shader=new Bt),this.updateRenderable(e),t.add(e)}execute(e){const{shader:t}=this._tilingSpriteDataHash[e.uid];t.groups[0]=this._renderer.globalUniforms.bindGroup;const r=t.resources.localUniforms.uniforms;r.uTransformMatrix=e.groupTransform,r.uRound=this._renderer._roundPixels|e._roundPixels,le(e.groupColorAlpha,r.uColor,0),this._state.blendMode=Ne(e.groupBlendMode,e.texture._source),this._renderer.encoder.draw({geometry:X,shader:t,state:this._state})}updateRenderable(e){const t=this._getTilingSpriteData(e),{canBatch:r}=t;if(r){const{batchableMesh:s}=t;e._didTilingSpriteUpdate&&this._updateBatchableMesh(e),s.batcher.updateElement(s)}else if(e._didTilingSpriteUpdate){const{shader:s}=t;s.updateUniforms(e.width,e.height,e._tileTransform.matrix,e.anchor.x,e.anchor.y,e.texture)}e._didTilingSpriteUpdate=!1}destroyRenderable(e){var r;const t=this._getTilingSpriteData(e);t.batchableMesh=null,(r=t.shader)==null||r.destroy(),this._tilingSpriteDataHash[e.uid]=null}_getTilingSpriteData(e){return this._tilingSpriteDataHash[e.uid]||this._initTilingSpriteData(e)}_initTilingSpriteData(e){const t=new j({indices:X.indices,positions:X.positions.slice(),uvs:X.uvs.slice()});return this._tilingSpriteDataHash[e.uid]={canBatch:!0,renderable:e,geometry:t},e.on("destroyed",()=>{this.destroyRenderable(e)}),this._tilingSpriteDataHash[e.uid]}_updateBatchableMesh(e){const t=this._getTilingSpriteData(e),{geometry:r}=t,s=e.texture.source.style;s.addressMode!=="repeat"&&(s.addressMode="repeat",s.update()),Ut(e,r.uvs),Ft(e,r.positions)}destroy(){for(const e in this._tilingSpriteDataHash)this.destroyRenderable(this._tilingSpriteDataHash[e].renderable);this._tilingSpriteDataHash=null,this._renderer=null}_updateCanBatch(e){const t=this._getTilingSpriteData(e),r=e.texture;let s=!0;return this._renderer.type===he.WEBGL&&(s=this._renderer.context.supports.nonPowOf2wrapping),t.canBatch=r.textureMatrix.isSimple&&(s||r.source.isPowerOfTwo),t.canBatch}}Ae.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"tilingSprite"};const kt={name:"local-uniform-msdf-bit",vertex:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32,
                uRound:f32,
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
        `,main:`
            vColor *= localUniforms.uColor;
            modelMatrix *= localUniforms.uTransformMatrix;
        `,end:`
            if(localUniforms.uRound == 1)
            {
                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);
            }
        `},fragment:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
         `,main:` 
            outColor = vec4<f32>(calculateMSDFAlpha(outColor, localUniforms.uColor, localUniforms.uDistance));
        `}},At={name:"local-uniform-msdf-bit",vertex:{header:`
            uniform mat3 uTransformMatrix;
            uniform vec4 uColor;
            uniform float uRound;
        `,main:`
            vColor *= uColor;
            modelMatrix *= uTransformMatrix;
        `,end:`
            if(uRound == 1.)
            {
                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
            }
        `},fragment:{header:`
            uniform float uDistance;
         `,main:` 
            outColor = vec4(calculateMSDFAlpha(outColor, vColor, uDistance));
        `}},zt={name:"msdf-bit",fragment:{header:`
            fn calculateMSDFAlpha(msdfColor:vec4<f32>, shapeColor:vec4<f32>, distance:f32) -> f32 {
                
                // MSDF
                var median = msdfColor.r + msdfColor.g + msdfColor.b -
                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));
            
                // SDF
                median = min(median, msdfColor.a);

                var screenPxDistance = distance * (median - 0.5);
                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                // Gamma correction for coverage-like alpha
                var luma: f32 = dot(shapeColor.rgb, vec3<f32>(0.299, 0.587, 0.114));
                var gamma: f32 = mix(1.0, 1.0 / 2.2, luma);
                var coverage: f32 = pow(shapeColor.a * alpha, gamma);

                return coverage;
             
            }
        `}},Ht={name:"msdf-bit",fragment:{header:`
            float calculateMSDFAlpha(vec4 msdfColor, vec4 shapeColor, float distance) {
                
                // MSDF
                float median = msdfColor.r + msdfColor.g + msdfColor.b -
                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));
               
                // SDF
                median = min(median, msdfColor.a);
            
                float screenPxDistance = distance * (median - 0.5);
                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
           
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                // Gamma correction for coverage-like alpha
                float luma = dot(shapeColor.rgb, vec3(0.299, 0.587, 0.114));
                float gamma = mix(1.0, 1.0 / 2.2, luma);
                float coverage = pow(shapeColor.a * alpha, gamma);  
              
                return coverage;
            }
        `}};let Q,ee;class Gt extends et{constructor(){const e=new $({uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uTransformMatrix:{value:new k,type:"mat3x3<f32>"},uDistance:{value:4,type:"f32"},uRound:{value:0,type:"f32"}}),t=sr();Q??(Q=tt({name:"sdf-shader",bits:[lr,dr(t),kt,zt,st]})),ee??(ee=rt({name:"sdf-shader",bits:[ur,cr(t),At,Ht,it]})),super({glProgram:ee,gpuProgram:Q,resources:{localUniforms:e,batchSamplers:gr(t)}})}}class ze{constructor(e){this._gpuBitmapText={},this._renderer=e}validateRenderable(e){const t=this._getGpuBitmapText(e);return e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,t)),this._renderer.renderPipes.graphics.validateRenderable(t)}addRenderable(e,t){const r=this._getGpuBitmapText(e);He(e,r),e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,r)),this._renderer.renderPipes.graphics.addRenderable(r,t),r.context.customShader&&this._updateDistanceField(e)}destroyRenderable(e){this._destroyRenderableByUid(e.uid)}_destroyRenderableByUid(e){const t=this._gpuBitmapText[e].context;t.customShader&&(T.return(t.customShader),t.customShader=null),T.return(this._gpuBitmapText[e]),this._gpuBitmapText[e]=null}updateRenderable(e){const t=this._getGpuBitmapText(e);He(e,t),this._renderer.renderPipes.graphics.updateRenderable(t),t.context.customShader&&this._updateDistanceField(e)}_updateContext(e,t){const{context:r}=t,s=gt.getFont(e.text,e._style);r.clear(),s.distanceField.type!=="none"&&(r.customShader||(r.customShader=T.get(Gt)));const i=Array.from(e.text),o=e._style;let a=s.baseLineOffset;const h=ge(i,o,s);let l=0;const u=o.padding,d=h.scale;let g=h.width,c=h.height+h.offsetY;o._stroke&&(g+=o._stroke.width/d,c+=o._stroke.width/d),r.translate(-e._anchor._x*g-u,-e._anchor._y*c-u).scale(d,d);const f=s.applyFillAsTint?o._fill.color:16777215;for(let p=0;p<h.lines.length;p++){const m=h.lines[p];for(let x=0;x<m.charPositions.length;x++){const b=i[l++],y=s.chars[b];y!=null&&y.texture&&r.texture(y.texture,f||"black",Math.round(m.charPositions[x]+y.xOffset),Math.round(a+y.yOffset))}a+=s.lineHeight}}_getGpuBitmapText(e){return this._gpuBitmapText[e.uid]||this.initGpuText(e)}initGpuText(e){const t=T.get(ir);return this._gpuBitmapText[e.uid]=t,this._updateContext(e,t),e.on("destroyed",()=>{this.destroyRenderable(e)}),this._gpuBitmapText[e.uid]}_updateDistanceField(e){const t=this._getGpuBitmapText(e).context,r=e._style.fontFamily,s=B.get(`${r}-bitmap`),{a:i,b:o,c:a,d:h}=e.groupTransform,l=Math.sqrt(i*i+o*o),u=Math.sqrt(a*a+h*h),d=(Math.abs(l)+Math.abs(u))/2,g=s.baseRenderedFontSize/e._style.fontSize,c=d*s.distanceField.range*(1/g);t.customShader.resources.localUniforms.uniforms.uDistance=c}destroy(){for(const e in this._gpuBitmapText)this._destroyRenderableByUid(e);this._gpuBitmapText=null,this._renderer=null}}ze.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"bitmapText"};function He(n,e){e.groupTransform=n.groupTransform,e.groupColorAlpha=n.groupColorAlpha,e.groupColor=n.groupColor,e.groupBlendMode=n.groupBlendMode,e.globalDisplayStatus=n.globalDisplayStatus,e.groupTransform=n.groupTransform,e.localDisplayStatus=n.localDisplayStatus,e.groupAlpha=n.groupAlpha,e._roundPixels=n._roundPixels}class Ge{constructor(e){this._gpuText=Object.create(null),this._renderer=e,this._renderer.runners.resolutionChange.add(this)}resolutionChange(){for(const e in this._gpuText){const t=this._gpuText[e].batchableSprite.renderable;t._autoResolution&&(t._resolution=this._renderer.resolution,t.onViewUpdate())}}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();return t.textureNeedsUploading?(t.textureNeedsUploading=!1,!0):t.currentKey!==r}addRenderable(e,t){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(r)}updateRenderable(e){const t=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),t.batcher.updateElement(t)}destroyRenderable(e){this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.htmlText.decreaseReferenceCount(t.currentKey),T.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),s=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e).catch(o=>{console.error(o)}),e._didTextUpdate=!1;const i=e._style.padding;oe(s.bounds,e._anchor,s.texture,i)}async _updateGpuText(e){e._didTextUpdate=!1;const t=this._getGpuText(e);if(t.generatingTexture)return;const r=e._getKey();this._renderer.htmlText.decreaseReferenceCount(t.currentKey),t.generatingTexture=!0,t.currentKey=r;const s=e.resolution??this._renderer.resolution,i=await this._renderer.htmlText.getManagedTexture(e.text,s,e._style,e._getKey()),o=t.batchableSprite;o.texture=t.texture=i,t.generatingTexture=!1,t.textureNeedsUploading=!0,e.onViewUpdate();const a=e._style.padding;oe(o.bounds,e._anchor,o.texture,a)}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:U.EMPTY,currentKey:"--",batchableSprite:T.get(nt),textureNeedsUploading:!1,generatingTexture:!1},r=t.batchableSprite;return r.renderable=e,r.texture=U.EMPTY,r.bounds={minX:0,maxX:1,minY:0,maxY:0},r.roundPixels=this._renderer._roundPixels|e._roundPixels,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,this._gpuText[e.uid]=t,e.on("destroyed",()=>{this.destroyRenderable(e)}),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}Ge.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"htmlText"};function Ot(){const{userAgent:n}=Ze.get().getNavigator();return/^((?!chrome|android).)*safari/i.test(n)}const Wt=new qe;function Oe(n,e,t,r){const s=Wt;s.minX=0,s.minY=0,s.maxX=n.width/r|0,s.maxY=n.height/r|0;const i=A.getOptimalTexture(s.width,s.height,r,!1);return i.source.uploadMethodId="image",i.source.resource=n,i.source.alphaMode="premultiply-alpha-on-upload",i.frame.width=e/r,i.frame.height=t/r,i.source.emit("update",i.source),i.updateUvs(),i}function It(n,e){const t=e.fontFamily,r=[],s={},i=/font-family:([^;"\s]+)/g,o=n.match(i);function a(h){s[h]||(r.push(h),s[h]=!0)}if(Array.isArray(t))for(let h=0;h<t.length;h++)a(t[h]);else a(t);o&&o.forEach(h=>{const l=h.split(":")[1].trim();a(l)});for(const h in e.tagStyles){const l=e.tagStyles[h].fontFamily;a(l)}return r}async function Dt(n){const e=await(await Ze.get().fetch(n)).blob(),t=new FileReader;return await new Promise((r,s)=>{t.onloadend=()=>r(t.result),t.onerror=s,t.readAsDataURL(e)})}async function We(n,e){const t=await Dt(e);return`@font-face {
        font-family: "${n.fontFamily}";
        src: url('${t}');
        font-weight: ${n.fontWeight};
        font-style: ${n.fontStyle};
    }`}const K=new Map;async function Et(n,e,t){const r=n.filter(s=>B.has(`${s}-and-url`)).map((s,i)=>{if(!K.has(s)){const{url:o}=B.get(`${s}-and-url`);i===0?K.set(s,We({fontWeight:e.fontWeight,fontStyle:e.fontStyle,fontFamily:s},o)):K.set(s,We({fontWeight:t.fontWeight,fontStyle:t.fontStyle,fontFamily:s},o))}return K.get(s)});return(await Promise.all(r)).join(`
`)}function Lt(n,e,t,r,s){const{domElement:i,styleElement:o,svgRoot:a}=s;i.innerHTML=`<style>${e.cssStyle}</style><div>${n}</div>`,i.setAttribute("style",`transform: scale(${t});transform-origin: top left; display: inline-block`),o.textContent=r;const{width:h,height:l}=s.image;return a.setAttribute("width",h.toString()),a.setAttribute("height",l.toString()),new XMLSerializer().serializeToString(a)}function $t(n,e){const t=W.getOptimalCanvasAndContext(n.width,n.height,e),{context:r}=t;return r.clearRect(0,0,n.width,n.height),r.drawImage(n,0,0),W.returnCanvasAndContext(t),t.canvas}function Vt(n,e,t){return new Promise(async r=>{t&&await new Promise(s=>setTimeout(s,100)),n.onload=()=>{r()},n.src=`data:image/svg+xml;charset=utf8,${encodeURIComponent(e)}`,n.crossOrigin="anonymous"})}class te{constructor(e){this._activeTextures={},this._renderer=e,this._createCanvas=e.type===he.WEBGPU}getTexture(e){return this._buildTexturePromise(e.text,e.resolution,e.style)}getManagedTexture(e,t,r,s){if(this._activeTextures[s])return this._increaseReferenceCount(s),this._activeTextures[s].promise;const i=this._buildTexturePromise(e,t,r).then(o=>(this._activeTextures[s].texture=o,o));return this._activeTextures[s]={texture:null,promise:i,usageCount:1},i}async _buildTexturePromise(e,t,r){const s=T.get(Me),i=It(e,r),o=await Et(i,r,q.defaultTextStyle),a=vt(e,r,o,s),h=Math.ceil(Math.ceil(Math.max(1,a.width)+r.padding*2)*t),l=Math.ceil(Math.ceil(Math.max(1,a.height)+r.padding*2)*t),u=s.image;u.width=h|0,u.height=l|0;const d=Lt(e,r,t,o,s);await Vt(u,d,Ot()&&i.length>0);let g=u;this._createCanvas&&(g=$t(u,t));const c=Oe(g,u.width,u.height,t);return this._createCanvas&&this._renderer.texture.initSource(c.source),T.return(s),c}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];t&&(t.usageCount--,t.usageCount===0&&(t.texture?this._cleanUp(t):t.promise.then(r=>{t.texture=r,this._cleanUp(t)}).catch(()=>{D("HTMLTextSystem: Failed to clean texture")}),this._activeTextures[e]=null))}_cleanUp(e){A.returnTexture(e.texture),e.texture.source.resource=null,e.texture.source.uploadMethodId="unknown"}getReferenceCount(e){return this._activeTextures[e].usageCount}destroy(){this._activeTextures=null}}te.extension={type:[_.WebGLSystem,_.WebGPUSystem,_.CanvasSystem],name:"htmlText"},te.defaultFontOptions={fontFamily:"Arial",fontStyle:"normal",fontWeight:"normal"};class Ie{constructor(e){this._gpuText=Object.create(null),this._renderer=e,this._renderer.runners.resolutionChange.add(this)}resolutionChange(){for(const e in this._gpuText){const t=this._gpuText[e].batchableSprite.renderable;t._autoResolution&&(t._resolution=this._renderer.resolution,t.onViewUpdate())}}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();if(t.currentKey!==r){const{width:s,height:i}=this._renderer.canvasText.getTextureSize(e.text,e.resolution,e._style);return!(this._renderer.canvasText.getReferenceCount(t.currentKey)===1&&s===t.texture._source.width&&i===t.texture._source.height)}return!1}addRenderable(e,t){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(r)}updateRenderable(e){const t=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),t.batcher.updateElement(t)}destroyRenderable(e){this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.canvasText.decreaseReferenceCount(t.currentKey),T.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),s=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e),e._didTextUpdate=!1;const i=e._style.padding;oe(s.bounds,e._anchor,s.texture,i)}_updateGpuText(e){const t=this._getGpuText(e),r=t.batchableSprite;t.texture&&this._renderer.canvasText.decreaseReferenceCount(t.currentKey),t.texture=r.texture=this._renderer.canvasText.getManagedTexture(e),t.currentKey=e._getKey(),r.texture=t.texture}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:null,currentKey:"--",batchableSprite:T.get(nt)};return t.batchableSprite.renderable=e,t.batchableSprite.bounds={minX:0,maxX:1,minY:0,maxY:0},t.batchableSprite.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuText[e.uid]=t,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,this._updateText(e),e.on("destroyed",()=>{this.destroyRenderable(e)}),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}Ie.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"text"};function De(n,e,t){for(let r=0,s=4*t*e;r<e;++r,s+=4)if(n[s+3]!==0)return!1;return!0}function Ee(n,e,t,r,s){const i=4*e;for(let o=r,a=r*i+4*t;o<=s;++o,a+=i)if(n[a+3]!==0)return!1;return!0}function Yt(n,e=1){const{width:t,height:r}=n,s=n.getContext("2d",{willReadFrequently:!0});if(s===null)throw new TypeError("Failed to get canvas 2D context");const i=s.getImageData(0,0,t,r).data;let o=0,a=0,h=t-1,l=r-1;for(;a<r&&De(i,t,a);)++a;if(a===r)return ie.EMPTY;for(;De(i,t,l);)--l;for(;Ee(i,t,o,a,l);)++o;for(;Ee(i,t,h,a,l);)--h;return++h,++l,new ie(o/e,a/e,(h-o)/e,(l-a)/e)}class Le{constructor(e){this._activeTextures={},this._renderer=e}getTextureSize(e,t,r){const s=O.measureText(e||" ",r);let i=Math.ceil(Math.ceil(Math.max(1,s.width)+r.padding*2)*t),o=Math.ceil(Math.ceil(Math.max(1,s.height)+r.padding*2)*t);return i=Math.ceil(i-1e-6),o=Math.ceil(o-1e-6),i=Je(i),o=Je(o),{width:i,height:o}}getTexture(e,t,r,s){typeof e=="string"&&(R("8.0.0","CanvasTextSystem.getTexture: Use object TextOptions instead of separate arguments"),e={text:e,style:r,resolution:t}),e.style instanceof E||(e.style=new E(e.style));const{texture:i,canvasAndContext:o}=this.createTextureAndCanvas(e);return this._renderer.texture.initSource(i._source),W.returnCanvasAndContext(o),i}createTextureAndCanvas(e){const{text:t,style:r}=e,s=e.resolution??this._renderer.resolution,i=O.measureText(t||" ",r),o=Math.ceil(Math.ceil(Math.max(1,i.width)+r.padding*2)*s),a=Math.ceil(Math.ceil(Math.max(1,i.height)+r.padding*2)*s),h=W.getOptimalCanvasAndContext(o,a),{canvas:l}=h;this.renderTextToCanvas(t,r,s,h);const u=Oe(l,o,a,s);if(r.trim){const d=Yt(l,s);u.frame.copyFrom(d),u.updateUvs()}return{texture:u,canvasAndContext:h}}getManagedTexture(e){e._resolution=e._autoResolution?this._renderer.resolution:e.resolution;const t=e._getKey();if(this._activeTextures[t])return this._increaseReferenceCount(t),this._activeTextures[t].texture;const{texture:r,canvasAndContext:s}=this.createTextureAndCanvas(e);return this._activeTextures[t]={canvasAndContext:s,texture:r,usageCount:1},r}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];if(t.usageCount--,t.usageCount===0){W.returnCanvasAndContext(t.canvasAndContext),A.returnTexture(t.texture);const r=t.texture.source;r.resource=null,r.uploadMethodId="unknown",r.alphaMode="no-premultiply-alpha",this._activeTextures[e]=null}}getReferenceCount(e){return this._activeTextures[e].usageCount}renderTextToCanvas(e,t,r,s){var y,P,v,w,M;const{canvas:i,context:o}=s,a=se(t),h=O.measureText(e||" ",t),l=h.lines,u=h.lineHeight,d=h.lineWidths,g=h.maxLineWidth,c=h.fontProperties,f=i.height;o.resetTransform(),o.scale(r,r);const p=t.padding*2;if(o.clearRect(0,0,h.width+4+p,h.height+4+p),(y=t._stroke)==null?void 0:y.width){const F=t._stroke;o.lineWidth=F.width,o.miterLimit=F.miterLimit,o.lineJoin=F.join,o.lineCap=F.cap}o.font=a;let m,x;const b=t.dropShadow?2:1;for(let F=0;F<b;++F){const z=t.dropShadow&&F===0,I=z?Math.ceil(Math.max(1,f)+t.padding*2):0,re=I*r;if(z){o.fillStyle="black",o.strokeStyle="black";const S=t.dropShadow,Xt=S.color,Kt=S.alpha;o.shadowColor=G.shared.setValue(Xt).setAlpha(Kt).toRgbaString();const jt=S.blur*r,Ye=S.distance*r;o.shadowBlur=jt,o.shadowOffsetX=Math.cos(S.angle)*Ye,o.shadowOffsetY=Math.sin(S.angle)*Ye+re}else o.globalAlpha=((P=t._fill)==null?void 0:P.alpha)??1,o.fillStyle=t._fill?V(t._fill,o):null,(v=t._stroke)!=null&&v.width&&(o.strokeStyle=V(t._stroke,o)),o.shadowColor="black";let $e=(u-c.fontSize)/2;u-c.fontSize<0&&($e=0);const Ve=((w=t._stroke)==null?void 0:w.width)??0;for(let S=0;S<l.length;S++)m=Ve/2,x=Ve/2+S*u+c.ascent+$e,t.align==="right"?m+=g-d[S]:t.align==="center"&&(m+=(g-d[S])/2),(M=t._stroke)!=null&&M.width&&this._drawLetterSpacing(l[S],t,s,m+t.padding,x+t.padding-I,!0),t._fill!==void 0&&this._drawLetterSpacing(l[S],t,s,m+t.padding,x+t.padding-I)}}_drawLetterSpacing(e,t,r,s,i,o=!1){const{context:a}=r,h=t.letterSpacing;let l=!1;if(O.experimentalLetterSpacingSupported&&(O.experimentalLetterSpacing?(a.letterSpacing=`${h}px`,a.textLetterSpacing=`${h}px`,l=!0):(a.letterSpacing="0px",a.textLetterSpacing="0px")),h===0||l){o?a.strokeText(e,s,i):a.fillText(e,s,i);return}let u=s;const d=O.graphemeSegmenter(e);let g=a.measureText(e).width,c=0;for(let f=0;f<d.length;++f){const p=d[f];o?a.strokeText(p,u,i):a.fillText(p,u,i);let m="";for(let x=f+1;x<d.length;++x)m+=d[x];c=a.measureText(m).width,u+=g-c+h,g=c}}destroy(){this._activeTextures=null}}Le.extension={type:[_.WebGLSystem,_.WebGPUSystem,_.CanvasSystem],name:"canvasText"},C.add(de),C.add(ue),C.add(Pe),C.add(nr),C.add(Re),C.add(Le),C.add(Ie),C.add(ze),C.add(te),C.add(Ge),C.add(Ae),C.add(ke),C.add(_e),C.add(me)});export{xr as __tla};
